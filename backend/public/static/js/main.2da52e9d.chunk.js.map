{"version":3,"sources":["services/auth.js","services/api.js","components/auth/Login.js","components/auth/Signup.js","components/Landing.js","services/editor.js","components/editor/Editor.js","services/collections.js","context/CollectionsContext.js","services/quotes.js","context/QuotesContext.js","services/references.js","context/ReferencesContext.js","components/editor/Quote.js","components/forms/Reference.js","components/overview/Navbar.js","components/overview/References.js","services/styles.js","context/StylesContext.js","components/forms/Collection.js","components/overview/Collections.js","components/overview/QuoteCard.js","components/overview/Quotes.js","components/overview/CollectionOverview.js","components/overview/DefaultView.js","components/overview/ReferenceOverview.js","components/overview/Layout.js","serviceWorker.js","index.js","Router.js"],"names":["SERVICE","axios","create","baseURL","withCredentials","AUTH_SERVICE","signup","user","post","login","logout","token","localStorage","socket","io","connect","query","Login","props","useState","isVisible","setIsVisible","email","password","userData","setUserData","className","notification","undefined","networkError","setNetworkError","useEffect","history","push","handleInput","e","key","target","name","value","onSubmit","a","preventDefault","data","JSON","stringify","response","status","transitionName","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","component","htmlFor","icon","faEnvelope","type","id","onChange","faLock","to","Signup","confirmPassword","passwordError","setPasswordError","emailError","setEmailError","validator","isEmail","setTimeout","faUser","Landing","savedQuote","cb","on","quote","updatedQuote","updateQuote","editorState","editorHtml","referenceFrom","emit","cleanConnection","removeAllListeners","Editor","state","EditorState","createEmpty","textDocument","componentDidMount","handleSaved","err","handleId","_id","setState","handleGetDocument","blocks","convertFromRaw","parse","body","createWithContent","componentDidUpdate","prevProps","ocrText","ContentState","createFromText","handleDocument","componentWillUnmount","handleUnmount","editorOnChange","rawContent","convertToRaw","getCurrentContent","handleUpdate","draftToHtml","handleKeyCommand","command","newState","RichUtils","_onBoldClick","toggleInlineStyle","_onItalicClick","_onUnderlineClick","faFont","onClick","this","faBold","faItalic","faUnderline","Draft","Component","COLLECTIONS_SERVICE","createCollection","collection","getAllCollections","get","getOneCollection","updateCollection","update","put","deleteCollection","delete","CollectionsContext","createContext","CollectionsProvider","collections","currentCollection","contributors","quotes","filtersCollections","cleanCurrentCollection","createOneCollection","prevState","updateOneCollection","newCollection","map","deleteOneQuoteFromCollection","quoteToRemove","filter","deleteOneCollection","collectionToRemove","Provider","children","QUOTES_SERVICE","createQuote","getAllQuotes","getOneQuote","deleteQuote","QuotesContext","QuotesProvider","currentQuote","filters","createOneQuote","updateOneQuote","addQuote","oldQuotes","includes","deleteOneQuote","REFERENCE_SERVICE","createReference","reference","getAllReferences","getOneReference","updateReference","deleteReference","ReferencesContext","ReferencesProvider","references","currentReference","title","firstName","lastName","volume","edition","place","publisher","date","numberOfPages","language","isbn","url","doi","accessed","archive","filtersReferences","cleanCurrentReference","REFERENCES_SERVICE","createOneReference","updateOneReference","newReference","deleteOneReference","referenceToRemove","deleteOneQuoteFromReference","Quote","useContext","allCollections","match","params","setId","setOcrText","imageUrl","isLoading","setIsLoading","isCameraActive","setIsCameraActive","setQuote","setCollections","scanText","image","Tesseract","recognize","progress","p","result","terminate","text","handleAttachment","files","goBack","faImage","faCamera","faBook","src","alt","renderImage","isQuote","document","querySelector","find","authors","charAt","onTakePhoto","dataUri","isFullscreen","Reference","referenceData","setReferenceData","Navbar","faBars","faSearch","placeholder","References","activeClassName","faEdit","STYLE_SERVICE","createStyle","style","getAllStyles","getOneStyle","updateStyle","deleteStyle","StylesContext","StylesProvider","styles","currentStyle","filtersStyles","STYLES_SERVICE","createOneStyle","deleteOneStyle","styleToRemove","updateOneStyle","cleanCurrentStyle","Collection","defaultStyle","collectionData","setCollectionData","Collections","faFolder","QuoteCard","isOptionsVisible","setIsOptionsVisible","dangerouslySetInnerHTML","__html","html","faEllipsisV","faTrash","faPenSquare","Quotes","contextQuotes","CollectionOverview","DefaultView","faClock","ReferenceOverview","Layout","isPlusActive","setIsPlusActive","exact","path","faQuoteRight","faPlus","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2da52e9d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://atldan-minerva.herokuapp.com/auth' : 'http://localhost:3000/api/auth';\n\nconst SERVICE = axios.create({ baseURL, withCredentials: true })\n\nconst AUTH_SERVICE = {\n  signup: (user) => SERVICE.post('/signup', user),\n  login: (user) => SERVICE.post('/login', user),\n  logout: () => SERVICE.post('/logout', { token: localStorage.token})\n}\n\nexport default AUTH_SERVICE;","import io from 'socket.io-client';\n\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://atldan-minerva.herokuapp.com/' : 'http://localhost:3000/'\n\nlet socket = io.connect(baseURL, {\n  query: `token=${localStorage.token}`\n});\n\n\nfunction restartSocket() {\n  socket = io.connect(baseURL, {\n    query: `token=${localStorage.token}`\n  });\n}\n\nfunction subscribeToTimer(cb) {\n  socket.on('timer', timestamp => cb(null, timestamp));\n  socket.emit('subscribeToTimer', 1000);\n} \n\nfunction signup(){\n  socket.emit('signup', { }, (error, user, token) => {\n    if(error) console.log(error)\n\n    localStorage.user = JSON.stringify(user)\n    localStorage.token = `Bearer ${token}`\n  })\n}\n\n\n\nexport { subscribeToTimer, signup, restartSocket };\nexport default socket","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock, faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\nimport AUTH_SERVICE from './../../services/auth'\nimport { restartSocket } from '../../services/api';\n\nimport './login.css'\n\nexport default function Login (props) {\n  const [ isVisible, setIsVisible ] = useState(false)\n  const [ userData, setUserData ] = useState({\n    email: '',\n    password: ''\n  })\n  const [networkError, setNetworkError] = useState({\n    className: '',\n    notification: undefined\n  })\n\n  useEffect(() => {\n    setIsVisible(true)\n    if (localStorage.user) props.history.push('/main')\n  }, [props.history])\n\n  const handleInput = (e) => {\n    const key = e.target.name;\n    const value = e.target.value\n\n    setUserData({...userData, [key]: value})\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data: { user, token } } = await AUTH_SERVICE.login(userData)\n      localStorage.user = JSON.stringify(user);\n      localStorage.token = token;\n      restartSocket(token)\n      props.history.push('/main');\n    } catch (e) {\n      if (e.response.status === 401) setNetworkError({ networkError: { className: 'error-animation', notification: <div className=\"error-network\">Incorrect email or passwor</div> } })\n      setNetworkError({ networkError: { className: 'error-animation', notification: <div className=\"error-network\">Something went wrong on the server</div> } })\n    }\n  }\n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"collection-overview\"\n      transitionAppearTimeout={600}\n      transitionEnterTimeout={250}\n      transitionLeaveTimeout={200}\n      component=\"div\"\n    >\n      { isVisible ? \n        <div className=\"container container--login\">\n          <div className={`card card--login ${networkError.className}`}>\n            <h2>Log in</h2>\n            {networkError.notification}\n            <form onSubmit={onSubmit}>\n\n              <label htmlFor=\"email\">Email</label>\n              <div className=\"input\">\n                <FontAwesomeIcon className=\"icon\" icon={faEnvelope} />\n                <input type=\"text\" name=\"email\" id=\"email\" value={userData.email} onChange={handleInput} />\n              </div>\n              <label htmlFor=\"password\">Password</label>\n              <div className=\"input\">\n                <FontAwesomeIcon className=\"icon\" icon={faLock} />\n                <input type=\"password\" name=\"password\" id=\"password\" value={userData.password} onChange={handleInput} />\n              </div>\n              <input type=\"submit\" value=\"Login\" className=\"submit\" />\n              <div className=\"footer\">\n                <p>If you don't have an account yet, you can create one <Link to=\"/signup\">here</Link></p>\n              </div>\n            </form>\n          </div>\n        </div>\n      : undefined }\n    </CSSTransitionGroup>\n    \n  )\n}","import React, { useState, useEffect } from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faEnvelope, faLock} from '@fortawesome/free-solid-svg-icons'\nimport validator from 'validator'\n\nimport AUTH_SERVICE from './../../services/auth'\nimport './signup.css'\n\nexport default function Signup (props) {\n  const [isVisible, setIsVisible] = useState(false)\n  const [userData, setUserData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  });\n  const [passwordError, setPasswordError] = useState({\n    className: '',\n    notification: undefined\n  })\n  const [emailError, setEmailError] = useState({\n    className: '',\n    notification: undefined\n  });\n\n  useEffect(() => {\n    if (localStorage.user) this.props.history.push('/profile');\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => {\n    if (userData.password !== userData.confirmPassword) {\n      setPasswordError({\n        className: 'danger',\n        notification: <span className=\"error-form\">Both passwords must be the same</span>\n      })\n    } else {\n      setPasswordError({\n        className: '',\n        notification: undefined\n      })\n    }\n\n    if (!validator.isEmail(userData.email)) {\n      setEmailError({\n        className: 'danger',\n        notification: <span className=\"error-form\">Please introduce a valid email</span>\n      })\n    } else {\n      setEmailError({\n        className: '',\n        notification: undefined\n      })\n    }\n  }, [userData])\n\n  const handleInput = (e) => {\n    const key = e.target.name;\n    const value = e.target.value\n    \n    setUserData({...userData, [key]: value});\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    const { data: { user, token } } = await AUTH_SERVICE.signup(userData)\n    localStorage.user = JSON.stringify(user);\n    localStorage.token = token\n    setIsVisible(false)\n    setTimeout(() => props.history.push('/'), 200)\n  }\n\n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"collection-overview\"\n      transitionAppearTimeout={600}\n      transitionEnterTimeout={250}\n      transitionLeaveTimeout={200}\n      component=\"div\"\n    >\n      { isVisible ? \n        <div className=\"container container--signup\">\n        <div className=\"card card--signup\">\n          <h2>Sign up</h2>\n          <form onSubmit={onSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <div className=\"input\">\n              <FontAwesomeIcon className=\"icon\" icon={faUser} />\n              <input type=\"text\" name=\"name\" id=\"name\" value={userData.name} onChange={handleInput} />\n            </div>\n            <label htmlFor=\"email\">Email {emailError.notification}</label>\n            <div className={`input ${emailError.className}`}>\n              <FontAwesomeIcon className=\"icon\" icon={faEnvelope} />\n              <input type=\"text\" name=\"email\" id=\"email\" value={userData.email} onChange={handleInput} />\n            </div>\n            <label htmlFor=\"password\">Password</label>\n            <div className=\"input\">\n              <FontAwesomeIcon className=\"icon\" icon={faLock} />\n              <input type=\"password\" name=\"password\" id=\"password\" value={userData.password} onChange={handleInput} />\n            </div>\n            <label htmlFor=\"password\">Verify password {passwordError.notification}</label>\n            <div className={`input ${passwordError.className}`}>\n              <FontAwesomeIcon className=\"icon\" icon={faLock} />\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" value={userData.confirmPassword} onChange={handleInput} />\n            </div>\n            <input type=\"submit\" className=\"submit\" value=\"Sign up\" />\n          </form>\n        </div>\n      </div>\n      : undefined }\n    </CSSTransitionGroup>\n  )\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './landing.css'\n\nexport default function Landing(props) {\n  useEffect(() => {\n    if(localStorage.user) return props.history.push('/main')\n  }, [props.history])\n\n  return (\n    <div className=\"container container--landing\">\n      <div className=\"slogan\">\n        <h1>Minerva</h1>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo, tempora optio aspernatur sapiente quae natus enim recusandae minima delectus ducimus! Aperiam, nisi animi tempora porro veniam facilis corrupti eaque harum!\n      </div>\n      <div className=\"identify\">\n        <Link to=\"/signup\" className=\"signup\">Signup</Link>\n        <Link to=\"/login\" className=\"login\">Login</Link>\n      </div>\n    </div>\n  )\n}\n","import socket from './api';\n\nconst savedQuote = (cb) => {\n  socket.on('savedQuote', (quote) => cb(null, quote))\n}\n\nconst updatedQuote = (cb) => {\n  socket.on('updatedQuote', (quote) => cb(null, quote))\n}\n\nconst updateQuote = (editorState, id, editorHtml, referenceFrom) => {\n  socket.emit('editQuote', {editorState, editorHtml}, id, referenceFrom)\n}\n\nfunction cleanConnection() {\n  socket.removeAllListeners()\n}\n\nexport { savedQuote, updateQuote, updatedQuote, cleanConnection }","import React, { Component } from 'react'\nimport { \n  Editor as DraftEditor, \n  EditorState, \n  RichUtils, \n  convertToRaw,\n  convertFromRaw, \n  ContentState,\n} from 'draft-js'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBold, faItalic, faUnderline, faFont } from '@fortawesome/free-solid-svg-icons'\nimport draftToHtml from 'draftjs-to-html'\n\nimport 'react-html5-camera-photo/build/css/index.css';\nimport './editor.css'\n\nexport default class Editor extends Component {\n\n  state = {\n    editorState: EditorState.createEmpty(),\n    id: this.props.id,\n    textDocument: this.props.textDocument\n  }\n\n  componentDidMount = async () => {\n    this.props.handleSaved((err, textDocument) => {\n      this.props.handleId(textDocument._id)\n      this.setState({ id: textDocument._id })\n      })\n\n    this.props.handleGetDocument((quote) => {\n      const blocks = convertFromRaw(JSON.parse(quote.body))\n      this.setState({ editorState: EditorState.createWithContent(blocks) })\n    })\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if(this.props.ocrText && this.props.ocrText !== prevProps.ocrText ) {\n      this.setState({ editorState: EditorState.createWithContent(ContentState.createFromText(this.props.ocrText))})\n    }\n    this.props.handleDocument(this.state.id)\n  }\n\n  componentWillUnmount = () => {\n    this.props.handleDocument(this.state.textDocument)\n    this.props.handleUnmount()\n  }\n\n  editorOnChange = (editorState) => {\n    const rawContent = convertToRaw(editorState.getCurrentContent())\n    this.props.handleUpdate(rawContent, this.state.id, draftToHtml(rawContent))\n    this.setState({ editorState })\n  }\n\n  handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.editorOnChange(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n  _onBoldClick = () => {\n    this.editorOnChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'))\n  }\n\n  _onItalicClick = () => {\n    this.editorOnChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'))\n  }\n\n  _onUnderlineClick = () => {\n    this.editorOnChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'))\n  }\n\n\n  render() {\n    return (\n      <div className=\"min-editor\">\n        <div className=\"menu-styles\">\n          <button><FontAwesomeIcon icon={ faFont }/></button>\n          <div>\n            <button onClick={ this._onBoldClick }><FontAwesomeIcon icon={ faBold } /></button>\n            <button onClick={ this._onItalicClick }><FontAwesomeIcon icon={ faItalic } /></button>\n            <button onClick={ this._onUnderlineClick }><FontAwesomeIcon icon={ faUnderline } /></button>\n          </div>\n        </div>\n        <DraftEditor \n          editorState={ this.state.editorState } \n          onChange={ this.editorOnChange } \n          handleKeyCommand={ this.handleKeyCommand }\n        />\n      </div>\n    )\n  }\n}\n","import axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://atldan-minerva.herokuapp.com/collections' : 'http://localhost:3000/api/collections';\n\nconst SERVICE = axios.create({ baseURL, withCredentials: true })\n\nconst COLLECTIONS_SERVICE = {\n  createCollection: (collection) => SERVICE.post('/', collection),\n  getAllCollections: () => SERVICE.get('/'),\n  getOneCollection: (id) => SERVICE.get(`/${id}`),\n  updateCollection: (id, update) => SERVICE.put(`/${id}`, update),\n  deleteCollection: (id) => SERVICE.delete(`/${id}`)\n}\n\nexport default COLLECTIONS_SERVICE;","import React, { Component, createContext } from 'react'\nimport COLLECTIONS_SERVICE from './../services/collections'\n\nexport const CollectionsContext = createContext()\n\nexport default class CollectionsProvider extends Component {\n\n  state = {\n    collections: [],\n    currentCollection: {\n      name: '',\n      contributors: [],\n      quotes: []\n    },\n    filtersCollections: {}\n  }\n\n  componentDidMount = async () => {\n    this.getAllCollections()\n  }\n\n  cleanCurrentCollection = () => {\n    this.setState({})\n  }\n\n  getAllCollections = async () => {\n    const { data: collections } = await COLLECTIONS_SERVICE.getAllCollections()\n    this.setState({ collections })\n  }\n\n  getOneCollection = async (id) => {\n    const { data: currentCollection } = await COLLECTIONS_SERVICE.getOneCollection(id)\n    this.setState({ currentCollection })\n  }\n\n  createOneCollection = async (data) => {\n    const { data: collection } = await COLLECTIONS_SERVICE.createCollection(data);\n    this.setState(prevState => {\n      const { collections } = prevState;\n\n      return { collections: [...collections, collection] }\n    })\n  }\n\n  updateOneCollection = async (id, data) => {\n    const { data: newCollection } = await COLLECTIONS_SERVICE.updateCollection(id, data);\n    this.setState(prevState => {\n      const { collections: oldCollections } = prevState;\n\n      const collections = oldCollections.map((collection) => {\n        if (collection._id === newCollection._id) return newCollection\n        return collection\n      })\n\n      return { collections }\n    })\n  }\n\n  deleteOneQuoteFromCollection = (quoteToRemove) => {\n    this.setState((prevState) => {\n      const { currentCollection } = prevState\n      const quotes = currentCollection.quotes.filter((quote) => quote._id !== quoteToRemove._id);\n\n      return { currentCollection: {...currentCollection, quotes } }\n    })\n  }\n\n  deleteOneCollection = async (id) => {\n    const { data: collectionToRemove } = await COLLECTIONS_SERVICE.deleteCollection(id);\n    this.setState((prevState) => {\n      const { collections: oldCollections } = prevState\n      const collections = oldCollections.filter((collection) => collection._id !== collectionToRemove._id);\n\n      return { collections }\n    })\n  }\n\n  render() {\n    const { collections, currentCollection, filtersCollections } = this.state\n    const {\n      getAllCollections,\n      getOneCollection,\n      createOneCollection,\n      deleteOneCollection,\n      updateOneCollection,\n      cleanCurrentCollection,\n      deleteOneQuoteFromCollection\n    } = this\n    return (\n      <CollectionsContext.Provider\n        value={{\n          collections,\n          currentCollection,\n          filtersCollections,\n          getAllCollections,\n          getOneCollection,\n          createOneCollection,\n          updateOneCollection,\n          deleteOneCollection,\n          cleanCurrentCollection,\n          deleteOneQuoteFromCollection\n        }}\n      >\n        {this.props.children}\n      </CollectionsContext.Provider>\n    )\n  }\n}\n","import axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://atldan-minerva.herokuapp.com/quotes' : 'http://localhost:3000/api/quotes';\n\nconst SERVICE = axios.create({ baseURL, withCredentials: true })\n\nconst QUOTES_SERVICE = {\n  createQuote: (quote) => SERVICE.post('/', quote),\n  getAllQuotes: () => SERVICE.get('/'),\n  getOneQuote: (id) => SERVICE.get(`/${id}`),\n  updateQuote: (id, update) => SERVICE.put(`/${id}`, update),\n  deleteQuote: (id) => SERVICE.delete(`/${id}`)\n}\n\nexport default QUOTES_SERVICE;","import React, { createContext, Component } from 'react'\nimport QUOTES_SERVICE from '../services/quotes'\n\nexport const QuotesContext = createContext()\n\nexport default class QuotesProvider extends Component {\n  state = {\n    quotes: [],\n    currentQuote: {},\n    filters: {}\n  }\n\n  componentDidMount = async () => {\n    this.getAllQuotes()\n  }\n\n  getAllQuotes = async () => {\n    const { data: quotes} = await QUOTES_SERVICE.getAllQuotes()\n    this.setState({ quotes })\n  }\n\n  getOneQuote = async (id) => {\n    const { data: currentQuote } = await QUOTES_SERVICE.getOneQuote(id)\n    this.setState({ currentQuote })\n  }\n\n  createOneQuote = async (data) => {\n    const { data: quote } = await QUOTES_SERVICE.createQuote(data);\n    this.setState(prevState => {\n      const { quotes } = prevState;\n      \n      return { quotes: [...quotes, quote]}\n    })\n  }\n\n  updateOneQuote = async (id, data) => {\n    await QUOTES_SERVICE.updateQuote(id, data);\n  }\n  \n  addQuote = (quote) => {\n    this.setState(prevState => {\n      const { quotes: oldQuotes } = prevState;\n      \n      if (!JSON.stringify(oldQuotes).includes(quote._id)) return { quotes: [...oldQuotes, quote] }\n      const quotes = oldQuotes.map((currentQuote) => {\n        if(currentQuote._id === quote._id) {\n          return quote\n        }\n        return currentQuote\n      })\n      return { quotes }\n    })\n  }\n\n  deleteOneQuote = async (id) => {\n    const { data: quoteToRemove } = await QUOTES_SERVICE.deleteQuote(id);\n    this.setState((prevState) => {\n      const { quotes: oldQuotes } = prevState\n      const quotes = oldQuotes.filter((quote) => quote._id !== quoteToRemove._id );\n\n      return { quotes }\n    })\n  }\n\n  render() {\n    const { quotes, currentQuote, filter } = this.state\n    const { getAllQuotes, getOneQuote, createOneQuote, deleteOneQuote, addQuote, updateOneQuote } = this\n    return (\n      <QuotesContext.Provider value={ {quotes, currentQuote, filter, getAllQuotes, getOneQuote, createOneQuote, deleteOneQuote, addQuote, updateOneQuote} }>\n        {this.props.children}\n      </QuotesContext.Provider>\n    )\n  }\n}","import axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://atldan-minerva.herokuapp.com/references' : 'http://localhost:3000/api/references';\n\nconst SERVICE = axios.create({ baseURL, withCredentials: true })\n\nconst REFERENCE_SERVICE = {\n  createReference: (reference) => SERVICE.post('/', reference),\n  getAllReferences: () => SERVICE.get('/'),\n  getOneReference: (id) => SERVICE.get(`/${id}`),\n  updateReference: (id, update) => SERVICE.put(`/${id}`, update),\n  deleteReference: (id) => SERVICE.delete(`/${id}`)\n}\n\nexport default REFERENCE_SERVICE;","import React, { Component, createContext } from 'react'\nimport REFERENCES_SERVICE from './../services/references'\n\nexport const ReferencesContext = createContext()\n\nexport default class ReferencesProvider extends Component {\n  state = {\n    references: [],\n    currentReference: {\n      type: 'BOOK',\n      title: '',\n      firstName: '',\n      lastName: '',\n      volume: 1,\n      edition: '',\n      place: '',\n      publisher: '',\n      date: '',\n      numberOfPages: '',\n      language: '',\n      isbn: '',\n      url: '',\n      doi: '',\n      accessed: '',\n      archive: ''\n    },\n    filtersReferences: {}\n  }\n\n  componentDidMount = async () => {\n    this.getAllReferences()\n  }\n\n  cleanCurrentReference = () => {\n    this.setState({\n      currentReference: {\n        type: 'BOOK',\n        title: '',\n        firstName: '',\n        lastName: '',\n        volume: 1,\n        edition: '',\n        place: '',\n        publisher: '',\n        date: '',\n        numberOfPages: '',\n        language: '',\n        isbn: '',\n        url: '',\n        doi: '',\n        accessed: '',\n        archive: ''\n      }})\n  }\n\n  getAllReferences = async () => {\n    const { data: references } = await REFERENCES_SERVICE.getAllReferences()\n    this.setState({ references })\n  }\n\n  getOneReference = async (id) => {\n    const { data: currentReference } = await REFERENCES_SERVICE.getOneReference(id)\n    this.setState({ currentReference })\n  }\n\n  createOneReference = async (data) => {\n    const { data: reference } = await REFERENCES_SERVICE.createReference(data);\n    this.setState(prevState => {\n      const { references } = prevState;\n\n      return { references: [...references, reference] }\n    })\n  }\n\n  updateOneReference = async (id, data) => {\n    const { data: newReference } = await REFERENCES_SERVICE.updateReference(id, data);\n    this.setState(prevState => {\n      const { references: oldReferences } = prevState;\n\n      const references = oldReferences.map((reference) => {\n        if(reference._id === newReference._id ) return newReference\n        return reference\n      }) \n\n      return { references }\n    })\n  }\n\n  deleteOneReference = async (id) => {\n    const { data: referenceToRemove } = await REFERENCES_SERVICE.deleteReference(id);\n    this.setState((prevState) => {\n      const { references: oldReferences } = prevState\n      const references = oldReferences.filter((reference) => reference._id !== referenceToRemove._id);\n\n      return { references }\n    })\n  }\n\n  deleteOneQuoteFromReference = (quoteToRemove) => {\n    this.setState((prevState) => {\n      const { currentReference } = prevState\n      const quotes = currentReference.quotes.filter((quote) => quote._id !== quoteToRemove._id);\n\n      return { currentReference: { ...currentReference, quotes } }\n    })\n  }\n\n\n\n  render() {\n    const { references, currentReference, filtersReferences } = this.state\n    const { \n      getAllReferences, \n      getOneReference, \n      createOneReference, \n      deleteOneReference, \n      updateOneReference, \n      cleanCurrentReference\n     } = this\n    return (\n      <ReferencesContext.Provider \n        value={{ \n          references, \n          currentReference, \n          filtersReferences,\n          getAllReferences,\n          getOneReference,\n          createOneReference,\n          updateOneReference,\n          deleteOneReference,\n          cleanCurrentReference\n        }}\n      >\n        {this.props.children}\n      </ReferencesContext.Provider>\n    )\n  }\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { savedQuote, updateQuote, updatedQuote, cleanConnection } from '../../services/editor'\nimport Camera from 'react-html5-camera-photo'\nimport Tesseract from 'tesseract.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage, faCamera, faBook } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransitionGroup } from 'react-transition-group' \n\nimport Editor from './Editor'\nimport { CollectionsContext } from '../../context/CollectionsContext'\nimport { QuotesContext } from '../../context/QuotesContext'\nimport { ReferencesContext } from '../../context/ReferencesContext'\nimport QUOTES_SERVICE from '../../services/quotes'\n\nimport 'react-html5-camera-photo/build/css/index.css';\nimport './quote.css'\n\nexport default function Quote (props){\n  const { addQuote, updateOneQuote } = useContext(QuotesContext)\n  const { collections: allCollections, updateOneCollection, getAllCollections  } = useContext(CollectionsContext)\n  const { references } = useContext(ReferencesContext)\n\n  const [ id, setId ] = useState(props.match.params.id);\n  const [ ocrText, setOcrText ] = useState(undefined);\n  const [ imageUrl, setImageUrl ] = useState('');\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [ isCameraActive, setIsCameraActive ] = useState(false);\n  const [ isVisible, setIsVisible ] = useState(false)\n  const [ quote, setQuote ] = useState(undefined)\n  const [ collections, setCollections] = useState(allCollections)\n\n\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => {\n    if(quote) {\n      setCollections(allCollections.filter(collection => !collection.quotes.includes(quote._id)))\n      getAllCollections()\n    }\n\n    return () => {\n      if(quote) addQuote(quote)\n    }\n  }, [quote, allCollections, addQuote, getAllCollections])\n\n  const handleGetDocument = async (cb) => {\n    if(props.match.params.id) {\n      const { data: quote } = await QUOTES_SERVICE.getOneQuote(id)\n      setQuote(quote)\n      cb(quote)\n    }\n  }\n\n  const handleClose = () => {\n    setIsVisible(false);\n    setTimeout(() => {\n      props.history.goBack()\n    }, 200)\n  }\n\n  const scanText = async (image) => {\n    setIsLoading(true)\n\n    const result = await Tesseract\n      .recognize(image, 'eng')\n      .progress((p) => {\n      })\n    Tesseract.terminate();\n\n    setOcrText(result.text)\n    setIsLoading(false)\n  }\n\n  const handlePhoto = (dataUri) => {\n    scanText(dataUri)\n    setIsCameraActive(false)\n  }\n\n  const handleAttachment = async (e) => {\n    scanText(e.target.files[0])\n  }\n\n  const handleQuote = (quote) => {\n    if (quote) {\n      updatedQuote((err, quote) => {\n        setQuote(quote)\n      })\n    }\n  }\n\n  const setCollection = () => {\n    const id = document.querySelector('#collection').value;\n    const collection = collections.find((currentCollection) => currentCollection._id === id)\n\n    collection.quotes.push(quote._id)\n    updateOneCollection(id, collection)\n  }\n\n  const setReference = () => {\n    const referenceFrom = document.querySelector('#reference').value;\n    \n    updateOneQuote(quote._id, {referenceFrom})\n  }\n\n  const renderImage = () => {\n    if (imageUrl) return <div><img src={imageUrl} alt=\"attached\" /></div>\n  }\n\n  return (\n    <div className=\"route-container\">\n      <div className=\"back-container\" onClick={handleClose}></div>\n      <CSSTransitionGroup\n        transitionName=\"quote\"\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={250}\n        transitionLeaveTimeout={200}\n        component=\"div\"\n      >\n        { isVisible ? \n          <div className=\"quote-container\">\n            <div className=\"quote\">\n              <div className=\"quote-editor\">\n                <div>\n                  <div className=\"quote-menu\">\n                    <div className=\"upload-wrapper\">\n                      <button><FontAwesomeIcon icon={faImage} /></button>\n                      <input type=\"file\" onChange={handleAttachment} />\n                    </div>\n                    <button onClick={() => setIsCameraActive(true)}><FontAwesomeIcon icon={faCamera} /></button>\n                    <button><FontAwesomeIcon icon={faBook} /></button>\n                    {isLoading ? <div className=\"spin-circle\"></div> : undefined}\n                  </div>\n                  {renderImage()}\n                </div>\n                <Editor\n                  handleSaved={savedQuote}\n                  handleUpdate={updateQuote}\n                  isQuote={true}\n                  id={id}\n                  handleId={setId}\n                  handleDocument={handleQuote}\n                  ocrText={ocrText}\n                  textDocument={quote}\n                  handleGetDocument={handleGetDocument}\n                  handleUnmount={cleanConnection}\n                />\n              </div>\n              { quote ?\n                <div className=\"editor-meta\">\n                  <div className=\"add-to-collection\">\n                    <select name=\"collection\" id=\"collection\">\n                      {collections.map(({ _id, name }) => (\n                        <option key={_id} value={_id}>{name}</option>\n                      ))}\n                    </select>\n                    <button onClick={setCollection}>Add</button>\n                  </div>\n                  <div className=\"add-to-reference\">\n                    <select name=\"refrence\" id=\"reference\" >\n                      {references.map(({_id, authors, title}) => (\n                        <option key={_id} value={_id}>{`${authors[0].lastName}, ${authors[0].lastName.charAt(0)}. ${title}`}</option>\n                      ))}\n                    </select>\n                    <button onClick={setReference}>Set</button>\n                  </div>\n                </div>\n              : undefined}\n            </div>\n            { isCameraActive ? <Camera onTakePhoto={handlePhoto} isFullscreen={true} /> : undefined }\n          </div> \n        : undefined }\n      </CSSTransitionGroup>\n    </div>\n  )\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport './reference.css'\nimport { ReferencesContext } from '../../context/ReferencesContext'\n\n\n\nexport default function Reference(props) {\n  const [ isVisible, setIsVisible ] = useState(false)\n  const [ referenceData, setReferenceData ] = useState({\n    type: 'BOOK',\n    title: '',\n    firstName: '',\n    lastName: '',\n    volume: 1,\n    edition: '',\n    place: '',\n    publisher: '',\n    date: '',\n    numberOfPages: 0,\n    language: '',\n    isbn: '',\n    url: '',\n    doi: '',\n    accessed: '',\n    archive: ''\n  })\n\n  const { \n    currentReference, \n    getOneReference, \n    createOneReference, \n    updateOneReference, \n    cleanCurrentReference \n  } = useContext(ReferencesContext)\n\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => { \n    if ((!referenceData._id && props.match.params.id) || referenceData._id !== props.match.params.id) {\n      getOneReference(props.match.params.id)\n\n      for(const key in currentReference) {\n        if (currentReference[key] === null) currentReference[key] = ''\n      }\n\n      setReferenceData({ \n        ...currentReference,\n        lastName: currentReference.authors ? currentReference.authors[0].lastName : '', \n        firstName: currentReference.authors ? currentReference.authors[0].firstName : '',\n      }) \n    }\n  }, [currentReference, getOneReference, props.match.params.id, referenceData._id])\n\n  const handleInput = (e) => {\n    setReferenceData({ ...referenceData, [e.target.name]: e.target.value });\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    if(referenceData._id){\n      updateOneReference(referenceData._id, {\n        ...referenceData, authors: [{\n          firstName: referenceData.firstName,\n          lastName: referenceData.lastName\n        }] \n      })\n    } else {\n      createOneReference({\n        ...referenceData, authors: [{\n          firstName: referenceData.firstName,\n          lastName: referenceData.lastName\n        }] \n      })\n    }\n\n    cleanCurrentReference()\n    setIsVisible(false)\n    setTimeout(() => {\n      props.history.goBack()\n    }, 200)\n  }\n\n  return (\n    <div className=\"route-container\">\n      <div className=\"back-container\" onClick={() => {\n        setIsVisible(false)\n        setTimeout(() => {\n          props.history.goBack()\n        }, 250)\n      }}></div>\n      <CSSTransitionGroup\n        transitionName=\"quote\"\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={250}\n        transitionLeaveTimeout={200}\n        component=\"div\"\n      >\n        {isVisible ? \n          <div className=\"reference-container\">\n            <form className=\"reference\" onSubmit={onSubmit}>\n              <h2>{props.match.params.id ? 'Edit reference' : 'Add reference'}</h2>\n              <select name=\"type\" id=\"type\">\n                <option value=\"BOOK\">Book</option>\n                <option value=\"BOOK_SECTION\">Book Section</option>\n                <option value=\"ENCYCLOPEDIA_ARTICLE\">Encyclopedia article</option>\n                <option value=\"JOURNAL_ARTICLE\">Journal article</option>\n                <option value=\"MAGAZINE_ARTICLE\">Magazine article</option>\n                <option value=\"NEWSPAPER_ARTICLE\">Newspaper article</option>\n                <option value=\"THESIS\">Thesis</option>\n                <option value=\"WEB_PAGE\">Web page</option>\n              </select>\n              <div className=\"fields\">\n                <label htmlFor=\"Title\">Title</label>\n                <input type=\"text\" name=\"title\" value={referenceData.title} onChange={handleInput}/>\n                <label htmlFor=\"author.firstName\">First name</label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" value={referenceData.firstName} onChange={handleInput} />\n                <label htmlFor=\"author.lastName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" value={referenceData.lastName} onChange={handleInput} />\n                <label htmlFor=\"publiser\">Publisher</label>\n                <input type=\"text\" name=\"publisher\" id=\"publiser\" value={referenceData.publisher} onChange={handleInput}/>\n                <label htmlFor=\"place\">Place</label>\n                <input type=\"text\" name=\"place\" id=\"place\" value={referenceData.place} onChange={handleInput}/>\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"date\" name=\"date\" id=\"date\" value={referenceData.date} onChange={handleInput}/>\n                <label htmlFor=\"numberOfPages\">Number of pages</label>\n                <input type=\"number\" name=\"numberOfPages\" id=\"numberOfPages\" value={referenceData.numberOfPages} onChange={handleInput}/>\n                <label htmlFor=\"volume\">Volume</label>\n                <input type=\"number\" name=\"volume\" id=\"volume\" value={referenceData.volume} onChange={handleInput}/>\n                <label htmlFor=\"url\">Website url</label>\n                <input type=\"url\" name=\"url\" id=\"url\" value={referenceData.url} onChange={handleInput}/>\n                <label htmlFor=\"accessed\">Date of access</label>\n                <input type=\"date\" name=\"accessed\" id=\"accessed\" value={referenceData.accessed} onChange={handleInput}/>\n                <label htmlFor=\"edition\">Edition</label>\n                <input type=\"text\" name=\"edition\" id=\"edition\" value={referenceData.edition} onChange={handleInput}/>\n                <label htmlFor=\"archive\">Archive</label>\n                <input type=\"text\" name=\"archive\" id=\"archive\" value={referenceData.archive} onChange={handleInput}/>\n                <label htmlFor=\"language\">Language</label>\n                <input type=\"text\" name=\"language\" id=\"language\" value={referenceData.language} onChange={handleInput}/>\n                <label htmlFor=\"isbn\">ISBN</label>\n                <input type=\"text\" name=\"isbn\" id=\"isbn\" value={referenceData.isbn} onChange={handleInput}/>\n                <label htmlFor=\"doi\">DOI</label>\n                <input type=\"text\" name=\"doi\" id=\"doi\" value={referenceData.doi} onChange={handleInput}/>\n              </div> \n              <input type=\"submit\" value=\"Save reference\" />\n            </form>\n          </div> \n        : undefined}\n      </CSSTransitionGroup>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport './navbar.css'\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-left\">\n        <FontAwesomeIcon icon={faBars} />\n        <div className=\"minerva\"><Link to=\"/main\">Minerva</Link></div>\n      </div>\n      <div className=\"navbar-center\">\n        <div className=\"search\"><FontAwesomeIcon icon={faSearch} /><input type=\"text\" placeholder=\"Search\"/></div>\n      </div>\n      <div className=\"navbar-right\">\n        <div className=\"avatar\">\n          <img src=\"http://bion.com.ua/wp-content/uploads/2016/04/empty_avatar.jpg\" alt=\"user\" />\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { ReferencesContext } from './../../context/ReferencesContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faBook } from '@fortawesome/free-solid-svg-icons'\n\nimport './references.css'\n\nexport default function References() {\n  const { references } = useContext(ReferencesContext);\n  \n  return (\n    <div className=\"references\">\n      <h3><FontAwesomeIcon icon={faBook} /> References</h3>\n      {references.map((({authors, title, _id}) => (\n        <div key={_id} className=\"reference-item\">\n          <div><NavLink to={`/main/references/${_id}`} activeClassName=\"current-reference\">{`${authors[0].lastName}, ${authors[0].firstName.charAt(0)}. ${title}`}</NavLink></div>\n          <div>\n            <Link to={`/main/reference/${_id}/edit`}><FontAwesomeIcon icon={faEdit} /></Link>\n          </div>\n        </div>\n      )))}\n    </div>\n  )\n}\n","import axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://atldan-minerva.herokuapp.com/styles' : 'http://localhost:3000/api/styles';\n\nconst SERVICE = axios.create({ baseURL, withCredentials: true })\n\nconst STYLE_SERVICE = {\n  createStyle: (style) => SERVICE.post('/', style),\n  getAllStyles: () => SERVICE.get('/'),\n  getOneStyle: (id) => SERVICE.get(`/${id}`),\n  updateStyle: (id, update) => SERVICE.put(`/${id}`, update),\n  deleteStyle: (id) => SERVICE.delete(`/${id}`)\n}\n\nexport default STYLE_SERVICE;","import React, { Component, createContext } from 'react'\nimport STYLES_SERVICE from '../services/styles'\n\nexport const StylesContext = createContext()\n\nexport default class StylesProvider extends Component {\n  state ={\n    styles: [],\n    currentStyle: {},\n    filtersStyles: {}\n  }\n\n  componentDidMount = async () => {\n    this.getAllStyles()\n  }\n\n  getAllStyles = async () => {\n    const { data: styles } = await STYLES_SERVICE.getAllStyles()\n    this.setState({ styles })\n  }\n\n  getOneStyle = async (id) => {\n    const currentStyle = this.state.styles.find((currentStyle) => currentStyle._id === id )\n    this.setState({ currentStyle })\n  }\n\n  createOneStyle = async (data) => {\n    const { data: style } = await STYLES_SERVICE.createStyle(data);\n    this.setState(prevState => {\n      const { styles } = prevState;\n\n      return { styles: [...styles, style] }\n    })\n  }\n\n  deleteOneStyle = async (id) => {\n    const { data: styleToRemove } = await STYLES_SERVICE.deleteStyle(id);\n    this.setState((prevState) => {\n      const { styles: oldStyles } = prevState\n      const styles = oldStyles.filter((style) => style._id !== styleToRemove._id);\n\n      return { styles }\n    })\n  }\n\n  render() {\n    const { styles, currentStyle, filtersStyles } = this.state\n    const {\n      getAllStyles,\n      getOneStyle,\n      createOneStyle,\n      deleteOneStyle,\n      updateOneStyle,\n      cleanCurrentStyle\n    } = this\n\n    return (\n      <StylesContext.Provider\n        value={{\n          styles,\n          currentStyle,\n          filtersStyles,\n          getAllStyles,\n          getOneStyle,\n          createOneStyle,\n          updateOneStyle,\n          deleteOneStyle,\n          cleanCurrentStyle\n        }}\n      >\n        {this.props.children}\n      </StylesContext.Provider>\n    )\n  }\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { CollectionsContext } from '../../context/CollectionsContext'\n\nimport './collection.css'\nimport { StylesContext } from '../../context/StylesContext'\n\nexport default function Collection(props) {\n  const [ isVisible, setIsVisible ] = useState(false)\n  const [ collectionData, setCollectionData ] = useState({\n    name: '',\n    defaultStyle: '',\n    contributors: [],\n    quotes: []\n  })\n\n  const {\n    createOneCollection,\n    currentCollection,\n    getOneCollection,\n    updateOneCollection,\n    cleanCurrentCollection\n  } = useContext(CollectionsContext)\n\n  const { styles } = useContext(StylesContext);\n\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => {\n    if ((!collectionData._id && props.match.params.id) || collectionData._id !== props.match.params.id) {\n      \n      getOneCollection(props.match.params.id)\n      for (const key in currentCollection) {\n        if (currentCollection[key] === null) currentCollection[key] = ''\n      }\n\n      setCollectionData(currentCollection)\n    }\n  }, [currentCollection, collectionData._id, getOneCollection, props.match.params.id])\n\n  const handleInput = (e) => {\n    setCollectionData({ ...collectionData, [e.target.name]: e.target.value });\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    if (collectionData._id) {\n      updateOneCollection(collectionData._id, collectionData)\n    } else {\n      createOneCollection(collectionData)\n    }\n\n    cleanCurrentCollection()\n    setIsVisible(false)\n    setTimeout(() => {\n      props.history.goBack()\n    }, 200)\n  }\n\n  return (\n    <div className=\"route-container\">\n      <div className=\"back-container\" onClick={() => {\n        setIsVisible(false)\n        setTimeout(() => {\n          props.history.goBack()\n        }, 250)\n      }}></div>\n      <CSSTransitionGroup\n        transitionName=\"quote\"\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={250}\n        transitionLeaveTimeout={200}\n        component=\"div\"\n      >\n        {isVisible ?\n          <div className=\"collection-container\">\n            <form className=\"collection\" onSubmit={onSubmit}>\n              <h2>{props.match.params.id ? 'Edit collection' : 'Add collection'}</h2>\n              <label htmlFor=\"name\">Name of the collection</label>\n              <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInput} value={collectionData.name}/>\n              <label htmlFor=\"defaulStyle\">Style</label>\n              <select name=\"defaultStyle\" id=\"defaultStyle\" onChange={handleInput}>\n                {styles.map(({ _id, name }) => (\n                  <option value={_id}>{name}</option>\n                ))}\n              </select>\n              <label htmlFor=\"quotes\">Add quotes</label>\n              <input type=\"text\" name=\"quotes\" id=\"quotes\" />\n              <label htmlFor=\"contributors\">Add contributors</label>\n              <input type=\"text\" name=\"contributors\" id=\"contributors\" />\n              <input type=\"submit\" value=\"Save collection\"/>\n            </form>\n          </div>\n          : undefined}\n      </CSSTransitionGroup>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit,  faFolder  } from '@fortawesome/free-solid-svg-icons'\nimport { CollectionsContext } from '../../context/CollectionsContext'\n\nimport './collections.css'\n\nexport default function Collections() {\n  const { collections } = useContext(CollectionsContext);\n  return (\n    <div className=\"collections\">\n      <h3><FontAwesomeIcon icon={ faFolder } /> Collections</h3>\n      {collections.map((({ name, _id }) => (\n        <div key={_id} className=\"collection-item\">\n          <div><NavLink to={`/main/collections/${_id}`} activeClassName=\"current-collection\">{name}</NavLink></div>\n          <div>\n            <Link to={`/main/collection/${_id}/edit`}><FontAwesomeIcon icon={faEdit} /></Link>\n          </div>\n        </div>\n      )))}\n    </div>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV, faTrash, faPenSquare } from '@fortawesome/free-solid-svg-icons'\nimport { QuotesContext } from '../../context/QuotesContext'\nimport { CollectionsContext } from '../../context/CollectionsContext'\nimport { ReferencesContext } from '../../context/ReferencesContext'\n\nexport default function QuoteCard({ quote }) {\n  const [isOptionsVisible, setIsOptionsVisible] = useState(false);\n  const { deleteOneQuote } = useContext(QuotesContext)\n  const { currentCollection, deleteOneQuoteFromCollection } = useContext(CollectionsContext)\n  const { currentReference, deleteOneQuoteFromReference } = useContext(ReferencesContext)\n\n  const handleDelete = () => {\n    deleteOneQuote(quote._id)\n    if (currentCollection._id) deleteOneQuoteFromCollection(quote)\n    if (currentReference._id) deleteOneQuoteFromReference(quote)\n  }\n\n  return (\n    <div className=\"quote-card\">\n      <Link to={`/main/quote/${quote._id}`} className=\"content\">\n        <span dangerouslySetInnerHTML={{ __html: quote.html }}></span>\n      </Link>\n      <div className=\"meta\">\n        <div>\n          <h3>Title</h3>\n        </div>\n        <div className={`options ${ isOptionsVisible ? 'options-active' : ''}`}>\n          <button className=\"options-button\" onClick={() => setIsOptionsVisible(!isOptionsVisible)}><FontAwesomeIcon icon={faEllipsisV} /></button>\n          <CSSTransitionGroup\n            transitionName=\"options\"\n            transitionEnterTimeout={250}\n            transitionLeaveTimeout={200}\n          >\n            {isOptionsVisible ?\n              <div className=\"options-actions\">\n                <button onClick={handleDelete} className=\"delete\"><FontAwesomeIcon icon={faTrash} /> Delete</button>\n                <button className=\"edit\"><FontAwesomeIcon icon={faPenSquare} /> Change reference</button>\n              </div>\n              : undefined}\n          </CSSTransitionGroup>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { QuotesContext }  from '../../context/QuotesContext'\n\n\nimport './quotes.css'\nimport QuoteCard from './QuoteCard'\n\nexport default function Quotes(props) {\n  const { quotes: contextQuotes }  = useContext(QuotesContext)\n  const quotes = props.quotes || contextQuotes\n\n  return (\n    <div className=\"quotes-container\">\n      {quotes.map((quote) => (\n        <div key={quote._id}>\n          <QuoteCard quote={quote} />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { CollectionsContext } from '../../context/CollectionsContext'\nimport Quotes from './Quotes';\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder } from '@fortawesome/free-solid-svg-icons'\n\nimport './collectionOverview.css'\n\nexport default function CollectionOverview(props) {\n  const [ isVisible, setIsVisible ] = useState(false)\n  const { currentCollection, getOneCollection, cleanCurrentCollection } = useContext(CollectionsContext);\n\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => {\n    getOneCollection(props.match.params.id)\n    setIsVisible(false)\n    setTimeout(() => {\n      setIsVisible(true)\n    }, 280)    \n\n    return () => {\n      cleanCurrentCollection()\n    }\n  }, [props.match.params.id, getOneCollection, cleanCurrentCollection])\n  \n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"collection-overview\"\n      transitionAppearTimeout={600}\n      transitionEnterTimeout={250}\n      transitionLeaveTimeout={200}\n      component=\"div\"\n    >\n      { isVisible ? \n        <div className=\"collection-overview\">\n          <h2><FontAwesomeIcon icon={ faFolder } /> {currentCollection.name}</h2>\n          <Quotes quotes={currentCollection.quotes} />\n        </div>\n      : undefined }\n    </CSSTransitionGroup>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport Quotes from './Quotes'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClock } from '@fortawesome/free-solid-svg-icons'\n\nimport './defaultView.css'\n\nexport default function DefaultView() {\n  const [ isVisible, setIsVisible ] = useState(false);\n  \n  useEffect(() => {\n    setIsVisible(true);\n\n    return () => {\n      setIsVisible(false)\n    }\n  }, [])\n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"collection-overview\"\n      transitionAppearTimeout={600}\n      transitionEnterTimeout={250}\n      transitionLeaveTimeout={200}\n      component=\"div\"\n    >\n      { isVisible ? \n        <div className=\"default-view\">\n          <h2><FontAwesomeIcon icon={ faClock } /> Recent</h2>\n          <Quotes />\n        </div>\n      : undefined }\n    </CSSTransitionGroup>\n  )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport Quotes from './Quotes';\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBook } from '@fortawesome/free-solid-svg-icons'\n\nimport { ReferencesContext } from './../../context/ReferencesContext'\n\nexport default function ReferenceOverview(props) {\n  const [isVisible, setIsVisible] = useState(false)\n  const { id } = props.match.params\n  const { currentReference, getOneReference } = useContext(ReferencesContext)\n\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => {\n    getOneReference(id)\n    setIsVisible(false)\n    setTimeout(() => {\n      setIsVisible(true)\n    }, 280)\n  }, [id, getOneReference])\n\n  return (\n    <div>\n      <CSSTransitionGroup\n        transitionName=\"collection-overview\"\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={250}\n        transitionLeaveTimeout={200}\n        component=\"div\"\n      >\n        {isVisible ?\n          <div className=\"collection-overview\">\n            <h2><FontAwesomeIcon icon={faBook} /> \n              {\n                ` ${currentReference.authors ? `${currentReference.authors[0].lastName}, ` : ''} \n                ${currentReference.authors ? `${currentReference.authors[0].firstName.charAt(0)}.` : ''} \n                ${currentReference.title}`\n              }\n            </h2>\n            <Quotes quotes={currentReference.quotes}/>\n          </div>\n          : undefined}\n      </CSSTransitionGroup>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBook, faQuoteRight, faPlus, faFolder } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransitionGroup } from 'react-transition-group' \n\nimport Quote from '../editor/Quote'\nimport Reference from '../forms/Reference'\nimport Navbar from './Navbar'\nimport References from './References'\nimport Collection from '../forms/Collection'\nimport Collections from './Collections'\nimport CollectionOverview from './CollectionOverview'\nimport DefaultView from './DefaultView'\nimport ReferenceOverview from './ReferenceOverview'\nimport QuotesProvider from './../../context/QuotesContext'\nimport ReferencesProvider from './../../context/ReferencesContext'\nimport CollectionsProvider from './../../context/CollectionsContext'\n\nimport './layout.css'\nimport StylesProvider from '../../context/StylesContext'\n\nexport default function Layout (props) {\n  const [ isPlusActive, setIsPlusActive ] = useState(false);\n\n  useEffect(() => {\n    if(!localStorage.user) return props.history.push('/login')\n  }, [props.history])\n\n  return (\n    <StylesProvider>\n      <CollectionsProvider>\n        <ReferencesProvider>\n          <QuotesProvider>\n            <div className=\"layout-container\">\n              <Navbar />\n              <div className=\"layout\">\n                <Collections />\n                <References />\n                <div className=\"main-content\">\n                  <Switch>\n                    <Route exact path=\"/main\" component={DefaultView} />\n                    <Route exact path=\"/main/collections/:id\" component={CollectionOverview} />\n                    <Route exact path=\"/main/references/:id\" component={ReferenceOverview} />\n                  </Switch>\n                  {/* <Quotes /> */}\n                  <div className=\"add-content\">\n                    <CSSTransitionGroup\n                      transitionName=\"plus-button\"\n                      transitionEnterTimeout={250}\n                      transitionLeaveTimeout={200}\n                      component=\"div\"\n                    >\n                      {isPlusActive ?\n                        <div className=\"add-content-buttons\">\n                          <div>Add quote\n                          <Link to=\"/main/quote/add\" onClick={() => setIsPlusActive(!isPlusActive)}>\n                              <button className=\"plus-quote\"><FontAwesomeIcon icon={faQuoteRight} /></button>\n                            </Link>\n                          </div>\n                          <div>Add reference <Link to=\"/main/reference/add\"><button className=\"plus-reference\"><FontAwesomeIcon icon={faBook} /></button></Link></div>\n                          <div>Add collection <Link to=\"/main/collection/add\"><button className=\"plus-collection\"><FontAwesomeIcon icon={faFolder} /></button></Link></div>\n                        </div>\n                        : undefined}\n                    </CSSTransitionGroup>\n                    <button onClick={() => setIsPlusActive(!isPlusActive)}><FontAwesomeIcon icon={faPlus} /></button>\n                  </div>\n                </div>\n                <Switch>\n                  <Route exact path=\"/main/quote/add\" component={Quote} />\n                  <Route exact path=\"/main/quote/:id\" component={Quote} />\n                  <Route exact path=\"/main/reference/add\" component={Reference} />\n                  <Route exact path=\"/main/reference/:id/edit\" component={Reference} />\n                  <Route exact path=\"/main/collection/add\" component={Collection} />\n                  <Route exact path=\"/main/collection/:id/edit\" component={Collection} />\n                </Switch>\n              </div>\n            </div>\n          </QuotesProvider>\n        </ReferencesProvider>\n      </CollectionsProvider>\n    </StylesProvider>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Login from './components/auth/Login'\nimport Signup from './components/auth/Signup'\nimport Landing from './components/Landing'\nimport Layout from './components/overview/Layout'\n\nexport default function Router() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/main\" component={Layout} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n"],"sourceRoot":""}